number_of_iterations:        10   # how many evolutions to make. Must be a positive integer
max_number_of_swaps:           20   # how big is the step size which defines "local" neighborhood? Must be a positive integer 
random_network_search_limit: 1000   # used for random graph generation. Must be a positive integer
valid_path_search_limit:     1000   # Must be a positive integer
search_mod_alert:              20   # how often to display that no path modification has been found. Must be a positive integer
confidence:                    90   # percent confidence of having found minimum. If too many searches are needed to have this confidence, fall back to "max_picks"
max_picks:                   1000   # bisection search: how many bisections get measured?
temperature_value:             10   # initial temperature
cooling_rate:                 0.9   # geometric factor for temperature decrease
number_of_searches:          1   # number of times to perform the simulated annealing search
use_hop_count:              False   # use average hop count        as fitness function metric
use_bisection_count:        False   # use bisection   count        as fitness function metric
use_timeToSolution:         True   # use average time to solution as fitness function metric
use_simulated_annealing:     True   # if False, then always use the new connections (do brute force search)

number_of_routers:              5
number_of_ports_per_router:    10
number_of_computers:           30
number_of_ports_per_computer:   1

specify_connections_input:  True
connections:                   []

# number_of_routers:            2
# number_of_ports_per_router:   6
# number_of_computers:          6
# number_of_ports_per_computer: 1
# specify_connections_input:    True
# connections=[[-1,1],[-2,1],[-3,1],[-4,1],[-5,1],[1,2],[2,-6]]

# number_of_routers:            4
# number_of_ports_per_router:   7
# number_of_computers:          8
# number_of_ports_per_computer: 1
# specify_connections_input:    True
# connections=[[-1,1],[-2,1],[-3,1],[-4,1],[-5,1],[1,2],[2,-6],[1,3],[3,-7],[3,4],[4,-8]]

# number_of_routers:            4
# number_of_ports_per_router:  16
# number_of_computers:         16
# number_of_ports_per_computer: 1
# specify_connections_input:    True
# connections=[[-1,1],[-2,1],[-3,1],[-4,1],[-5,1],[-6,1],[-7,1],[-8,1],[-9,1],[-10,1],[-11,1],[-12,1],[-13,1],[1,2],[2,-14],[1,3],[3,-15],[1,4],[4,-16]]

